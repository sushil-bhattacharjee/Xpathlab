Metadata-Version: 2.1
Name: scrapli_netconf
Version: 2024.1.30
Summary: Fast, flexible, sync/async, Python 3.7+ NETCONF client built on scrapli
Author-email: Carl Montanari <carl.r.montanari@gmail.com>
License: MIT License
        
        Copyright (c) 2021 Carl Montanari
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Changelog, https://scrapli.github.io/scrapli_netconf/changelog/
Project-URL: Docs, https://scrapli.github.io/scrapli_netconf/
Project-URL: Homepage, https://github.com/scrapli/scrapli_netconf
Keywords: arista,automation,cisco,eos,iosxe,iosxr,juniper,junos,netconf,network,nxos,ssh,telnet
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: lxml <5.0.0,>=4.5.1
Requires-Dist: scrapli >=2022.07.30
Provides-Extra: asyncssh
Requires-Dist: asyncssh <3.0.0,>=2.2.1 ; extra == 'asyncssh'
Provides-Extra: dev
Requires-Dist: black <24.0.0,>=23.3.0 ; extra == 'dev'
Requires-Dist: darglint <2.0.0,>=1.8.1 ; extra == 'dev'
Requires-Dist: isort <6.0.0,>=5.10.1 ; extra == 'dev'
Requires-Dist: mypy <2.0.0,>=1.4.1 ; extra == 'dev'
Requires-Dist: nox ==2023.4.22 ; extra == 'dev'
Requires-Dist: pycodestyle <3.0.0,>=2.8.0 ; extra == 'dev'
Requires-Dist: pydocstyle <7.0.0,>=6.1.1 ; extra == 'dev'
Requires-Dist: pylama <9.0.0,>=8.4.0 ; extra == 'dev'
Requires-Dist: pylint <4.0.0,>=3.0.0 ; extra == 'dev'
Requires-Dist: pytest-asyncio <1.0.0,>=0.17.0 ; extra == 'dev'
Requires-Dist: pytest-cov <5.0.0,>=3.0.0 ; extra == 'dev'
Requires-Dist: pytest <8.0.0,>=7.0.0 ; extra == 'dev'
Requires-Dist: toml <1.0.0,>=0.10.2 ; extra == 'dev'
Requires-Dist: paramiko <3.0.0,>=2.6.0 ; extra == 'dev'
Requires-Dist: asyncssh <3.0.0,>=2.2.1 ; extra == 'dev'
Requires-Dist: ssh2-python <2.0.0,>=0.23.0 ; (python_version < "3.12") and extra == 'dev'
Provides-Extra: docs
Requires-Dist: mdx-gh-links <1.0,>=0.2 ; extra == 'docs'
Requires-Dist: mkdocs <2.0.0,>=1.2.3 ; extra == 'docs'
Requires-Dist: mkdocs-gen-files <1.0.0,>=0.4.0 ; extra == 'docs'
Requires-Dist: mkdocs-literate-nav <1.0.0,>=0.5.0 ; extra == 'docs'
Requires-Dist: mkdocs-material <10.0.0,>=8.1.6 ; extra == 'docs'
Requires-Dist: mkdocs-material-extensions <2.0.0,>=1.0.3 ; extra == 'docs'
Requires-Dist: mkdocs-section-index <1.0.0,>=0.3.4 ; extra == 'docs'
Requires-Dist: mkdocstrings[python] <1.0.0,>=0.19.0 ; extra == 'docs'
Provides-Extra: paramiko
Requires-Dist: paramiko <3.0.0,>=2.6.0 ; extra == 'paramiko'
Provides-Extra: ssh2
Requires-Dist: ssh2-python <2.0.0,>=0.23.0 ; (python_version < "3.12") and extra == 'ssh2'

[![Supported Versions](https://img.shields.io/pypi/pyversions/scrapli-netconf.svg)](https://pypi.org/project/scrapli-netconf)
[![PyPI version](https://badge.fury.io/py/scrapli-netconf.svg)](https://badge.fury.io/py/scrapli-netconf)
[![Weekly Build](https://github.com/scrapli/scrapli_netconf/workflows/Weekly%20Build/badge.svg)](https://github.com/scrapli/scrapli_netconf/actions?query=workflow%3A%22Weekly+Build%22)
[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)
[![License: MIT](https://img.shields.io/badge/License-MIT-blueviolet.svg)](https://opensource.org/licenses/MIT)

scrapli_netconf
===============

---

**Documentation**: <a href="https://scrapli.github.io/scrapli_netconf" target="_blank">https://scrapli.github.io/scrapli_netconf</a>

**Source Code**: <a href="https://github.com/scrapli/scrapli_netconf" target="_blank">https://github.com/scrapli/scrapli_netconf</a>

**Examples**: <a href="https://github.com/scrapli/scrapli_netconf/tree/master/examples" target="_blank">https://github.com/scrapli/scrapli_netconf/tree/master/examples</a>

---

scrapli_netconf is a NETCONF driver built on top of scrapli, giving you all the scrapli behaviour you know and love, 
but for NETCONF connections.


#### Key Features:

- __Easy__: Just like scrapli, scrapli_netconf is easy to get going with, and looks and feels just like "normal" 
  scrapli -- check out the documentation and example links above, and you'll be connecting to devices in no time.
- __Fast__: Do you like to go fast? Of course you do! scrapli_netconf supports all of the ssh transports that 
  scrapli core supports; check out the `ssh2` transport if you've got the need for speed!
- __Great Developer Experience__: scrapli_netconf has great editor support thanks to being fully typed; that plus 
  thorough docs make developing with scrapli a breeze.
- __Well Tested__: Perhaps out of paranoia, but regardless of the reason, scrapli_netconf has lots of tests! Unit tests 
  cover the basics, regularly ran functional tests connect to virtual routers to ensure that everything works IRL! 
- __Concurrency on Easy Mode__: [Nornir's](https://github.com/nornir-automation/nornir) 
  [scrapli plugin](https://github.com/scrapli/nornir_scrapli) gives you all the normal benefits of scrapli __plus__ 
  all the great features of Nornir.


## Requirements

MacOS or \*nix<sup>1</sup>, Python 3.7+

scrapli_netconf's only requirements are `scrapli`, of course, and `lxml`.

<sup>1</sup> Although many parts of scrapli *do* run on Windows, Windows is not officially supported


## Installation

```
pip install scrapli_netconf
```

See the [docs](https://scrapli.github.io/scrapli_netconf/user_guide/installation) for other installation methods/details.



## A Simple Example

```python
from scrapli_netconf.driver import NetconfDriver

my_device = {
    "host": "172.18.0.13",
    "auth_username": "scrapli",
    "auth_password": "scrapli",
    "auth_strict_key": False,
    "port": 830
}

conn = NetconfDriver(**my_device)
conn.open()
response = conn.get_config(source="running")
print(response.result)
```
